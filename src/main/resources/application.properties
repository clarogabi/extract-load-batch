## Spring Configurations
spring.main.banner-mode=off
spring.application.name=extract-load-batch
server.servlet.context-path=/
server.port=8080

spring.web.resources.add-mappings=false
spring.mvc.throw-exception-if-no-handler-found=true
server.servlet.encoding.force=true
#server.error.include-stacktrace=NEVER

## JPA Configurations
spring.jpa.hibernate.ddl-auto=none
spring.jpa.database=default
spring.jpa.properties.hibernate.default_schema=EXTRACTLOADBATCH

## Connection Pool Hikari Configurations
#  https://github.com/brettwooldridge/HikariCP
datasource.hikari.minimumIdle=50
datasource.hikari.maximumPoolSize=100
datasource.hikari.idleTimeout=180000
datasource.hikari.connectionTimeout=60000
datasource.hikari.maxLifetime=900000
datasource.hikari.leakDetectionThreshold=1800000
datasource.hikari.validationTimeout=60000

jpa.transaction.timeout=30

#hostname: localhost
#port: 49161
#sid: xe
#username: system
#password: oracle

## Batch Main Datasource Connection Properties
extract-load-batch.spring.datasource.hikari.jdbc-url=jdbc:oracle:thin:@//localhost:49161/xe
extract-load-batch.spring.datasource.hikari.username=EXTRACTLOADBATCH
extract-load-batch.spring.datasource.hikari.password=EXTRACTLOADBATCH
extract-load-batch.spring.datasource.hikari.driverClassName=oracle.jdbc.driver.OracleDriver
extract-load-batch.spring.datasource.hikari.minimumIdle=${datasource.hikari.minimumIdle}
extract-load-batch.spring.datasource.hikari.maximumPoolSize=${datasource.hikari.maximumPoolSize}
extract-load-batch.spring.datasource.hikari.idleTimeout=${datasource.hikari.idleTimeout}
extract-load-batch.spring.datasource.hikari.maxLifetime=${datasource.hikari.maxLifetime}
extract-load-batch.spring.datasource.hikari.connectionTimeout=${datasource.hikari.connectionTimeout}
extract-load-batch.spring.datasource.hikari.leakDetectionThreshold=${datasource.hikari.leakDetectionThreshold}
extract-load-batch.spring.datasource.hikari.validationTimeout=${datasource.hikari.validationTimeout}
jpa.custom.transaction.timeout=${jpa.transaction.timeout}

## Batch Source Datasource Connection Properties
db.source.datasource.hikari.jdbc-url=jdbc:oracle:thin:@//localhost:49161/xe
db.source.datasource.hikari.username=CO_APP
db.source.datasource.hikari.password=CO_APP
db.source.datasource.hikari.driverClassName=oracle.jdbc.driver.OracleDriver
db.source.datasource.hikari.minimumIdle=${datasource.hikari.minimumIdle}
db.source.datasource.hikari.maximumPoolSize=${datasource.hikari.maximumPoolSize}
db.source.datasource.hikari.idleTimeout=${datasource.hikari.idleTimeout}
db.source.datasource.hikari.maxLifetime=${datasource.hikari.maxLifetime}
db.source.datasource.hikari.connectionTimeout=${datasource.hikari.connectionTimeout}
db.source.datasource.hikari.leakDetectionThreshold=${datasource.hikari.leakDetectionThreshold}
db.source.datasource.hikari.validationTimeout=${datasource.hikari.validationTimeout}
db.source.datasource.hikari.registerMbeans=false

## Batch Target Datasource Connection Properties
db.target.datasource.hikari.jdbc-url=jdbc:oracle:thin:@//localhost:49161/xe
db.target.datasource.hikari.username=CO_APP_TARGET
db.target.datasource.hikari.password=CO_APP_TARGET
db.target.datasource.hikari.driverClassName=oracle.jdbc.driver.OracleDriver
db.target.datasource.hikari.minimumIdle=${datasource.hikari.minimumIdle}
db.target.datasource.hikari.maximumPoolSize=${datasource.hikari.maximumPoolSize}
db.target.datasource.hikari.idleTimeout=${datasource.hikari.idleTimeout}
db.target.datasource.hikari.maxLifetime=${datasource.hikari.maxLifetime}
db.target.datasource.hikari.connectionTimeout=${datasource.hikari.connectionTimeout}
db.target.datasource.hikari.leakDetectionThreshold=${datasource.hikari.leakDetectionThreshold}
db.target.datasource.hikari.validationTimeout=${datasource.hikari.validationTimeout}
db.target.datasource.hikari.registerMbeans=false

## Connection Pool Hikari Configurations
# Without below HikariCP uses deprecated com.zaxxer.hikari.hibernate.HikariConnectionProvider
#spring.jpa.hibernate.connection.provider_class=org.hibernate.hikaricp.internal.HikariCPConnectionProvider
spring.datasource.hikari.minimumIdle=${datasource.hikari.minimumIdle}
spring.datasource.hikari.maximumPoolSize=${datasource.hikari.maximumPoolSize}
spring.datasource.hikari.idleTimeout=${datasource.hikari.idleTimeout}
spring.datasource.hikari.maxLifetime=${datasource.hikari.maxLifetime}
spring.datasource.hikari.connectionTimeout=${datasource.hikari.connectionTimeout}
spring.datasource.hikari.leakDetectionThreshold=${datasource.hikari.leakDetectionThreshold}
spring.datasource.hikari.registerMbeans=false

## Spring Batch Configurations

# Schema and table name prefix for Spring Batch Repositories
#next.database.batch.schema.table.prefix=BATCH_
spring.batch.job.enabled=false

# Batch Execution configurations
batch.execution.concurrencyLimit=4
batch.execution.chunkSize=200
batch.execution.reader.fetchSize=10000
batch.execution.reader.goBackMinutes=5
batch.execution.retry.limit=3


#hostname: localhost
#port: 49161
#sid: xe
#username: system
#password: oracle